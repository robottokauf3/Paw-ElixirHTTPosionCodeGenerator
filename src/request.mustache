defmodule ExportedRequest do
  @moduledoc """
  First, make sure you add HTTPoison to your mix.exs dependencies:

  def deps do
    [{:httpoison, "~> 0.9.0"}]
  end
  """

  @doc """
  # {{{ request.name }}}
  # {{{ request.method }}} {{{ url.fullPath }}}
  """
  def request() do
    url = "{{{ url.base }}}"

    # ====== Headers ======
    headers = [{{^headers.hasHeaders}}]{{/headers.hasHeaders}}
    {{#headers.hasHeaders}}
    {{#headers.headers}}
      {"{{{name}}}", "{{{value}}}"},
    {{/headers.headers}}
    ]
    {{/headers.hasHeaders}}

    # ====== Query Params ======
    params = [ {{^url.hasParams}} ] {{/url.hasParams}}
    {{#url.hasParams}}
    {{#url.params}}
      {"{{{name}}}", "{{{value}}}"},
    {{/url.params}}
    ]
    {{/url.hasParams}}

    {{#body.hasBody}}
    # ====== Body ======
    body = "{{{body.content}}}"

    {{/body.hasBody}}
    HTTPoison.start()
    case HTTPoison.{{{ method }}}(url, {{#body.hasBody}}body, {{/body.hasBody}}headers, params: params) do
      {:ok, response = %HTTPoison.Response{status_code: status_code, body: body}} ->
        IO.inspect(status_code)
        IO.inspect(body)

        response
      {:error, error = %HTTPoison.Error{reason: reason}} ->
        IO.inspect(reason)

        error
    end
  end

end
